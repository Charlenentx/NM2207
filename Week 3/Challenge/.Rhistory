student_info=list()
student_names<-c("Alice","Bob","Catherine")
scores<-c(85L,92L,78L)
Pass<-c(TRUE,TRUE,FALSE)
student_info=list(Names="student_names", Score=85, Pass=TRUE)
student_info
student_info=list()
student_names<-c("Alice","Bob","Catherine")
scores<-c(85L,92L,78L)
Pass<-c(TRUE,TRUE,FALSE)
student_info=list("name"=c("Alice","Bob","Catherine"), "Score" <-c(85L,92L,78L), "Pass" <-c(TRUE,TRUE,FALSE))
student_info
student_info=list()
student_info=list("name"=c("Alice","Bob","Catherine"), "Score" <-c(85L,92L,78L), "Pass" <-c(TRUE,TRUE,FALSE))
student_info
student_info=list()
student_names<-c("Alice","Bob","Catherine")
scores<-c(85L,92L,78L)
Pass<-c(TRUE,TRUE,FALSE)
student_info=list("name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
student_info
student_info=list()
x<-c(10)
typeof(x)
data<-c(10)
typeof(x)
data<-c(10,15.5,"20")
typeof(data)
data<-c(15.5)
typeof(data)
data<-c(10,15.5,"20")
typeof(data)
data<-c(10,15.5,"20", TRUE)
typeof(data)
data<-c(10,15.5,"20", TRUE)
data[1]
typeof(data)
data<-c(10,15.5,"20", TRUE)
data1<-data[1]
typeof(data1)
data<-c(10,15.5,"20", TRUE)
data1<-data[1]
typeof(data1)
data2<-data[2]
typeof(data2)
data<-c(10,15.5,"20", TRUE)
data1<-data[1]
typeof(data1)
data2<-data[2]
typeof(data2)
data3<-data[3]
typeof(data3)
data<-c(10,15.5,"20", TRUE)
data1<-data[1]
typeof(data1)
data2<-data[2]
typeof(data2)
data3<-data[3]
typeof(data3)
data4<-data[4]
typeof(data4)
data<-c(10,15.5,"20", TRUE)
typeof(data[1])
data2<-data[2]
typeof(data2)
data3<-data[3]
typeof(data3)
data4<-data[4]
typeof(data4)
data<-c(10,15.5,"20", TRUE)
typeof(data[1])
typeof(data[2])
typeof(data[3])
typeof(data[4])
# Enter code here
prices<-c(20.5,15,"25")
typeof(prices[3])
# Enter code here
prices<-c(20.5,15,"25")
prices<-as.numeric(prices[3])
typeof(prices[3])
# Enter code here
prices<-c(20.5,15,"25")
prices<-as.numeric(prices[3])
typeof(prices[3])
print(prices)
# Enter code here
prices<-c(20.5,15,"25")
prices<-as.numeric(prices[3])
typeof(prices[2])
print(prices)
# Enter code here
prices<-c(20.5,15,"25")
prices<-as.numeric(prices[3])
typeof(prices[3])
print(prices)
# Enter code here
prices<-c(20.5,15,"25")
prices<-as.numeric(prices)
typeof(prices[3])
print(prices)
# Enter code here
x<-c(5,10,15)
y<-c("apple","banana","cherry")
z<-(x,y)
# Enter code here
x<-c(5,10,15)
y<-c("apple","banana","cherry")
z<-c(x,y)
# Enter code here
x<-c(5,10,15)
y<-c("apple","banana","cherry")
z<-c(x,y)
typeof(z)
# Enter code here
x<-c(5,10,15)
typeof(x)
y<-c("apple","banana","cherry")
typeof(y)
z<-c(x,y)
typeof(z)
# Enter code here
x<-c(5,10,15)
typeof(x)
y<-c("apple","banana","cherry")
typeof(y)
z<-c(x,y)
typeof(z)
# Enter code here
numbers<-c(7,12.5,"15.7")
Sum(numbers)
# Enter code here
numbers<-c(7,12.5,"15.7")
sum(numbers)
# Enter code here
numbers<-as.numeric((7,12.5,"15.7"))
# Enter code here
numbers<-as.numeric(7,12.5,"15.7"))
# Enter code here
numbers<-as.numeric(7,12.5,"15.7")
sum(numbers)
# Enter code here
numbers<-as.numeric(7,12.5,"15.7")
sum(numbers)
tyoeof(numbers)
# Enter code here
numbers<-as.numeric(7,12.5,"15.7")
sum(numbers)
typeof(numbers)
# Enter code here
numbers<-as.numeric(c(7,12.5,"15.7"))
sum(numbers)
typeof(numbers)
# Enter code here
grades<-as.numeric(c(85, 90.5,"75.2"))
mean(grades)
# Enter code here
grades<-as.numeric(c(85, 90.5,"75.2"))
mean(grades)
# Enter code here
mixed_data=list("Numbers"=c(10,20,30), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
# Enter code here
mixed_data=list("Numbers"=c(10,20,30), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
# Enter code here
mixed_data=list("Numbers"=c(10,20,30), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(numbers)
# Enter code here
mixed_data=list("Numbers"=c(10,20,30), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(Numbers)
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(Numbers)
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(as.numeric(Numbers))
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(as.numeric("Numbers"))
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mixed_data$Numbersmean(as.numeric("Numbers"))
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mixed_data$Numbers
mean(as.numeric("Numbers"))
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(as.numeric(mixed_data$Numbers))
# Enter code here
mixed_data=list("Numbers"=c(10L,20L,30L), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(mixed_data$Numbers)
# Enter code here
mixed_data=list("Numbers"=c(10,20,30), "Colour"=c("red", "green", "blue"), "Logical"=c(TRUE,FALSE,TRUE))
mixed_data
mean(mixed_data$Numbers)
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
print(student_info$Bob_Score)
print(student_info$Bob$Score)
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
student_info$"Bob"$Score)
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
student_info$"Bob"$Score
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
student_info%>%Bob$Score
?which
y=which(student&Bob)
y=which(Name$Bob)
y=which(student_info$Name==Bob)
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
index <-which(student_info$names=="Bob")
print(index)
student_info$scores[2]
y
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
index <-which(student_info$names=="Bob")
print(index)
student_info$scores[2]
```{r, eval=TRUE,echo=TRUE}
# Enter code here
x<-c(2,4,6,8,10)
x[length(x)]
```
x<-c(2,4,6,8,10)
tail[x,1]
x<-c(2,4,6,8,10)
tail(x,1)
x<-c(2,4,6,8,10)
tail(x,2)
words <- c("apple", "banana", "cherry", "apple")
index <-which(words=="apple")
print(index)
student_info<-list(Name=c("Alice","Bob","Catherine"), Score=c(85L,92L,78L), Pass=c(TRUE,TRUE,FALSE))
student_info<-list("Name"=c("Alice","Bob","Catherine"), Score=c(85L,92L,78L), Pass=c(TRUE,TRUE,FALSE))
student_info$Name
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"), Score=c(85L,92L,78L), Pass=c(TRUE,TRUE,FALSE))
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"), Score=c(85L,92L,78L), Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$names=="Bob")
print(index)
# Enter code here
ages<-c(26,28,30,32,34)
x[x>30]
# Enter code here
ages<-c(26,28,30,32,34)
ages[ages>30]
# Enter code here
words <- c("apple", "banana", "cherry", "apple")
index <-which(words=="apple")
print(index)
# Enter code here
x<-c(2,4,6,8,10)
tail(x,1)
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"), Score=c(85L,92L,78L), Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$names=="Bob")
print(index)
student_info$scores[2]
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"), Score=c(85L,92L,78L),Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$names=="Bob")
print(index)
student_info$scores[2]
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"),Score=c(85L,92L,78L),Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$Name=="Bob")
print(index)
student_info$scores[2]
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"),Score=c(85L,92L,78L),Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$Name=="Bob")
print(index)
student_info$Scores[2]
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"),Score=c(85L,92L,78L),Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$Name=="Bob")
print(index)
student_info$Scores[2]
# Enter code here
student_info<-list(Name=c("Alice","Bob","Catherine"),Score=c(85L,92L,78L),Pass=c(TRUE,TRUE,FALSE))
index <-which(student_info$Name=="Bob")
print(index)
student_info$Score[2]
# Enter code here
Sequence<-1:20
# Enter code here
sequence<-1:20
sequence[3]
# Enter code here
x<-1:20
x[3]
# Enter code here
x<-1:10
x[4:8]
# Enter code here
x<- c(10, NA, 15, 20)
x[2]
# Enter code here
x<-(85,87,90,92,94,96)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-[x>90]
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-c[x>90]
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-c(x[x>90])
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-c(x[x>90])
n(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-c(x[x>90])
print(hot_days)
n(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-c(x[x>90])
print(hot_days)
numbers(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-c(as.logical(x[x>90])
print(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(x[x>90])
print(hot_days)
numbers(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(x[x>90])
print(hot_days)
count(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(c(x[x>90]))
print(hot_days)
count(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(c(x>90))
print(hot_days)
count(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(c(x>90))
print(hot_days)
sum(hot_days, na.rm = TRUE)
count(hot_days)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(c(x>90))
print(hot_days)
sum(hot_days, na.rm = TRUE)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(c(x>80))
print(hot_days)
sum(hot_days, na.rm = TRUE)
# Enter code here
x<-c(85,87,90,92,94,96)
hot_days<-as.logical(c(x>90))
print(hot_days)
sum(hot_days, na.rm = TRUE)
# Enter code here
x<-c("apple", "grape", "pineapple", "blueberry", "orange")
long_names<-as.logical(c(x>nchar(6)))
# Enter code here
x<-c("apple", "grape", "pineapple", "blueberry", "orange")
long_names<-as.logical(c(x>nchar(6)))
print(long_names)
# Enter code here
x<-c("apple", "grape", "pineapple", "blueberry", "orange")
long_names<-as.logical(c(nchar(x)>6))
print(long_names)
# Enter code here
x<-c("apple", "grape", "pineapple", "blueberry", "orange")
long_names<-as.logical(c(nchar(x)>6))
print(long_names)
sum(long_names, na.rm = TRUE)
# Enter code here
x<-c("apple", "grape", "pineapple", "blueberry", "orange")
long_names<-as.logical(c(nchar(x)>6))
print(long_names)
long_names[nchar(x)>6]
# Enter code here
x<-c("apple", "grape", "pineapple", "blueberry", "orange")
long_names<-as.logical(c(nchar(x)>6))
print(long_names)
x[nchar(x)>6]
x<-c(5L,10L,11L,7L)
divisible_by_5<-(c(x %% 5))
# Enter code here
x<-c(5L,10L,11L,7L)
divisible_by_5<-(c(x %% 5))
print(divisible_by_5)
# Enter code here
x<-c(5L,10L,11L,7L)
divisible_by_5<-as.logical((c(x %% 5))
print(divisible_by_5)
x<-c(5L,10L,11L,7L)
divisible_by_5<-as.logical(c(x %% 5))
print(divisible_by_5)
# Enter code here
x<-c(5L,10L,11L,7L)
divisible_by_5<-as.logical(c(x %% 5))
print(divisible_by_5)
# Enter code here
x<-c(5L,10L,11L,7L)
divisible_by_5<-as.logical(c(x %% 5))
print(divisible_by_5)
x[c(x %% 5)]
# Enter code here
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparsion<-as.logical(c(vector1>vector2))
print(comparison)
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparsion<-as.logical(c(vector1 > vector2))
print(comparison)
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparison<-as.logical(c(vector1 > vector2))
print(comparison)
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparison<-as.logical(c(vector1 > vector2))
print(comparison)
print(vector1>vector2)
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparison<-vector1 > vector
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparison<-vector1 > vector2
print(comparison)
print(vector1>vector2)
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparison<-vector1 > vector2
print(comparison)
x<-c(5L,10L,11L,7L)
divisible_by_5<-c(x %% 5)
print(divisible_by_5)
x[c(x %% 5)]
# Enter code here
# Enter code here
vector1<-c(1,2,3,4)
vector2<-c(2,4,6,8)
comparison<-vector1 > vector2
print(comparison)
student_info=list("Name"=c("Alice","Bob","Catherine"), "Score"=c(85L,92L,78L), "Pass"=c(TRUE,TRUE,FALSE))
student_info
# Enter code here
x<- c(10, NA, 15, 20)
is.na(x)
# Enter code here
x<- c(10, NA, 15, 20)
which(is.na(x))
x<-c(5L,10L,11L,7L)
divisible_by_5<-x %% 5
print(divisible_by_5)
x[c(x %% 5)]
# Enter code here
x<-c(5L,10L,11L,7L)
divisible_by_5<-x %% 5
print(divisible_by_5)
# Enter code here
x<-c(5L,10L,11L,7L)
divisible_by_5<-x %% 5 == 0
print(divisible_by_5)
# Enter code here
# Enter code here
x<-1:20
print[seq(from1L,to=20L, by=3L)]
# Enter code here
x<-1:20
print[seq(from=1L,to=20L, by=3L)]
# Enter code here
x<-1:20
x<-seq(from=1L,to=20L, by=3L)]
# Enter code here
x<-1:20
x<-seq(from=1L,to=20L, by=3L)
print(x0)
# Enter code here
x<-1:20
x<-seq(from=1L,to=20L, by=3L)
print(x)
